@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "EditWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Yazar Güncelleme Sayfası</h2>

@using (Html.BeginForm("EditWriter", "Writer", FormMethod.Post))
{
<div class="form-group">
    @Html.Label("Yazar ID")
    @Html.TextBoxFor(x => x.WriterID, new { @class = "form-control" })
    <br />
    @Html.Label("Yazar Adı")
    @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)
    <br />
    @Html.Label("Yazar Soyadı")
    @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterSurName)
    <br />
    @Html.Label("Yazar Profil")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br />
    @Html.Label("Yazar Unvan")
    @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterTitle)
    <br />
    @Html.Label("Yazar Hakkında")
    @Html.TextBoxFor(x => x.About, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.About)
    <br />
    @Html.Label("Mail")
    @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail, "", new { @class = "text-danger" })

    <br />
    @Html.Label("Password")
    @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterPassword)

    <br />

    <button class="btn btn-success">Değişikleri Uygula</button>
</div>
}